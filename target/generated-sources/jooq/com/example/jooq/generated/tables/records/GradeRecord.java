/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.records;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import com.example.jooq.generated.enums.GradeGradeCode;
import com.example.jooq.generated.tables.Grade;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class GradeRecord extends UpdatableRecordImpl<GradeRecord> implements
                Record6<GradeGradeCode, Integer, Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /** Setter for <code>SION.grade.grade_code</code>. */
    public void setGradeCode(GradeGradeCode value) {
        set(0, value);
    }

    /** Getter for <code>SION.grade.grade_code</code>. */
    public GradeGradeCode getGradeCode() {
        return (GradeGradeCode) get(0);
    }

    /** Setter for <code>SION.grade.min_score</code>. */
    public void setMinScore(Integer value) {
        set(1, value);
    }

    /** Getter for <code>SION.grade.min_score</code>. */
    public Integer getMinScore() {
        return (Integer) get(1);
    }

    /** Setter for <code>SION.grade.max_score</code>. */
    public void setMaxScore(Integer value) {
        set(2, value);
    }

    /** Getter for <code>SION.grade.max_score</code>. */
    public Integer getMaxScore() {
        return (Integer) get(2);
    }

    /** Setter for <code>SION.grade.monthly_unit_price</code>. */
    public void setMonthlyUnitPrice(Integer value) {
        set(3, value);
    }

    /** Getter for <code>SION.grade.monthly_unit_price</code>. */
    public Integer getMonthlyUnitPrice() {
        return (Integer) get(3);
    }

    /** Setter for <code>SION.grade.created_at</code>. */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /** Getter for <code>SION.grade.created_at</code>. */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /** Setter for <code>SION.grade.updated_at</code>. */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /** Getter for <code>SION.grade.updated_at</code>. */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<GradeGradeCode> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<GradeGradeCode, Integer, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<GradeGradeCode, Integer, Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<GradeGradeCode> field1() {
        return Grade.GRADE.GRADE_CODE;
    }

    @Override
    public Field<Integer> field2() {
        return Grade.GRADE.MIN_SCORE;
    }

    @Override
    public Field<Integer> field3() {
        return Grade.GRADE.MAX_SCORE;
    }

    @Override
    public Field<Integer> field4() {
        return Grade.GRADE.MONTHLY_UNIT_PRICE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Grade.GRADE.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Grade.GRADE.UPDATED_AT;
    }

    @Override
    public GradeGradeCode component1() {
        return getGradeCode();
    }

    @Override
    public Integer component2() {
        return getMinScore();
    }

    @Override
    public Integer component3() {
        return getMaxScore();
    }

    @Override
    public Integer component4() {
        return getMonthlyUnitPrice();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public GradeGradeCode value1() {
        return getGradeCode();
    }

    @Override
    public Integer value2() {
        return getMinScore();
    }

    @Override
    public Integer value3() {
        return getMaxScore();
    }

    @Override
    public Integer value4() {
        return getMonthlyUnitPrice();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public GradeRecord value1(GradeGradeCode value) {
        setGradeCode(value);
        return this;
    }

    @Override
    public GradeRecord value2(Integer value) {
        setMinScore(value);
        return this;
    }

    @Override
    public GradeRecord value3(Integer value) {
        setMaxScore(value);
        return this;
    }

    @Override
    public GradeRecord value4(Integer value) {
        setMonthlyUnitPrice(value);
        return this;
    }

    @Override
    public GradeRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public GradeRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public GradeRecord values(GradeGradeCode value1, Integer value2, Integer value3, Integer value4,
                    LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /** Create a detached GradeRecord */
    public GradeRecord() {
        super(Grade.GRADE);
    }

    /** Create a detached, initialised GradeRecord */
    public GradeRecord(GradeGradeCode gradeCode, Integer minScore, Integer maxScore,
                    Integer monthlyUnitPrice, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Grade.GRADE);

        setGradeCode(gradeCode);
        setMinScore(minScore);
        setMaxScore(maxScore);
        setMonthlyUnitPrice(monthlyUnitPrice);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /** Create a detached, initialised GradeRecord */
    public GradeRecord(com.example.jooq.generated.tables.pojos.Grade value) {
        super(Grade.GRADE);

        if (value != null) {
            setGradeCode(value.getGradeCode());
            setMinScore(value.getMinScore());
            setMaxScore(value.getMaxScore());
            setMonthlyUnitPrice(value.getMonthlyUnitPrice());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
