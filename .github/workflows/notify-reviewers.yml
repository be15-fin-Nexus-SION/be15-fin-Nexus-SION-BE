name: Notify Reviewers on PR

on:
  pull_request:
    types: [review_requested]
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if notification already sent (by PR comment)
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const notified = comments.data.some(comment =>
              comment.body.includes("[🔔 Reviewer Notified]")
            );

            if (notified) {
              console.log("✅ Already notified.");
              return { skip: true };
            } else {
              console.log("🔔 No prior notification.");
              return { skip: false };
            }

      - name: Map reviewers to Discord mentions
        id: map-reviewers
        if: steps.check.outputs.skip == 'false'
        env:
          REVIEWERS_JSON: ${{ toJson(github.event.pull_request.requested_reviewers) }}
        run: |
          echo "🔄 Mapping GitHub usernames to Discord IDs..."

          declare -A USER_MAP=(
            ["sezeme"]="534088965050073089"
            ["Kihong12"]="385400409654820864"
            ["kimjy8937"]="592708683687788557"
            ["ckaudgh"]="417182025401892868"
            ["didiha"]="1069488556206206997"
            ["develup-psy"]="531501995140448267"
          )

          mentions=""

          while read login; do
            id=${USER_MAP[$login]}
            if [ -n "$id" ]; then
              mentions+="<@$id> "
            else
              echo "⚠️ No Discord ID for $login"
            fi
          done < <(echo "$REVIEWERS_JSON" | jq -r '.[].login')

          echo "mentions=$mentions" >> "$GITHUB_OUTPUT"

      - name: Send Discord Notification
        if: steps.check.outputs.skip == 'false'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          MENTIONS: ${{ steps.map-reviewers.outputs.mentions }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{
            \"content\": \"📣 $MENTIONS님! Pull Request 리뷰 요청이 왔습니다.\\n🔗 PR: $PR_URL\",
            \"allowed_mentions\": { \"parse\": [\"users\"] }
          }" \
          "$DISCORD_WEBHOOK_URL"

      - name: Add PR comment to record notification
        if: steps.check.outputs.skip == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "[🔔 Reviewer Notified] Discord 알림이 전송되었습니다."
            });
